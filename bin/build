#!/usr/bin/env python
import argparse
import os
import re
import logging
from typing import NamedTuple, Iterable
from collections import namedtuple, defaultdict, MappingView, OrderedDict
from pathlib import Path, PurePath
from boltons.strutils import camel2under
from rutabaga import Renderer
from google.api.annotations_pb2 import http as google_api_http
from thundersnow import fsutil, ioutil
from itertools import chain
from subprocess import check_call


logging.basicConfig(level=logging.INFO)
LOG = logging.getLogger(__name__)



def parse_args():
    parser = argparse.ArgumentParser(
        description='Compile Protobufs',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    args = parser.parse_args()
    return args


def main():
    args = parse_args()
    logging.basicConfig(level=logging.INFO)

    pattern = re.compile(r'package\s+(?P<pkg>.+);.*')

    package_lines = filter(lambda l: 'package' in l,
           chain.from_iterable(
               map(ioutil.iterlines,
                   fsutil.find('./protos', '*proto'))))


    package = pattern.match(next(package_lines)).groupdict()['pkg']

    check_call(['make', 'clean'])
    check_call(['make', f'PACKAGE_DIR={package}', 'compile-python'])


if __name__ == '__main__':
    main()
